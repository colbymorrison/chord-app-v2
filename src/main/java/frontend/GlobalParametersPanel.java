package frontend;

import backend.ChordChart;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class GlobalParametersPanel extends Panel implements ActionListener {
    private JPanel panel;
    JComboBox<String> keys;
    JTextField tempo;
    JButton playButton;
    private JButton save;
    private String fileName = null;

    private final String[] ALLKEYS = {"CMaj", "GMaj", "DMaj", "AMaj", "EMaj", "BMaj", "F#Maj", "C#Maj",
            "FMaj", "BBMaj", "EBMaj", "ABMaj", "DBMaj", "GBMaj", "CBMaj", "amin", "emin", "bmin", "f#min", "c#min", "g#min", "d#min",
            "a#min", "dmin", "gmin", "cmin", "fmin", "bBmin", "eBmin", "aBmin"};

    public GlobalParametersPanel(UI userInterface) {
        super(userInterface);
        $$$setupUI$$$();
        panel.setPreferredSize(new Dimension(500, 200));
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    public void setTempo(int tempo) {
        this.tempo.setText(Integer.toString(tempo));
    }

    /**
     *
     * @param arg 0 if key changed
     */
    public void draw(Object arg) { $$$setupUI$$$(); }

    /**
     * @param evt the event
     */
    @Override
    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() instanceof JComboBox) {
            JComboBox cb = (JComboBox) evt.getSource();
            KeyMore key = new KeyMore((String) cb.getSelectedItem());
            getUserInterface().setKey(key);
        } else if (evt.getSource() instanceof JTextField) {
            String tText = tempo.getText();
            int tInt;
            try {
                tInt = Integer.parseInt(tText);
                if (tInt > 220 || tInt < 40) throw new NumberFormatException("Invalid");
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Enter Valid Tempo (from 40-220)");
                tempo.setText("120");
                tInt = 120;
            }
            ChordChart chart = this.getUserInterface().getChordChart();
            chart.setTempo(tInt);
            this.getUserInterface().setChordChart(chart);
        } else {
            JButton buttonHit = (JButton) (evt.getSource());
            if (buttonHit.getText().equals("Play")) {
                this.getUserInterface().getChordChart().play();
            } else {
                if (fileName == null) {
                    fileName = JOptionPane.showInputDialog("Please enter the name of your file:");
                    if ((fileName != null) && (!fileName.isEmpty()))
                        this.getUserInterface().getChordChart().saveFile(fileName);
                } else this.getUserInterface().getChordChart().saveFile(fileName);

            }
        }
    }

    /**
     * Intellij method to create components
     */
    private void createUIComponents() {
        // TODO: place custom component creation code here
        keys = new JComboBox<>(ALLKEYS);
        keys.setSelectedIndex(0);
        keys.addActionListener(this);
        tempo = new JTextField("120");
        tempo.addActionListener(this);
        playButton = new JButton("Play");
        playButton.addActionListener(this);
        save = new JButton("Save");
        save.addActionListener(this);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 4, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(keys, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel.add(tempo, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(50, 24), null, 0, false));
        playButton.setText("Play");
        panel.add(playButton, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        save.setText("Save");
        panel.add(save, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
